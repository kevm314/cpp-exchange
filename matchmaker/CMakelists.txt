cmake_minimum_required(VERSION 3.1...3.25)
set(CMAKE__CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -O0 -fPIC -std=c++20 -g ") # -fsanitize=leak -g -fsanitize=address
option(MATCHMAKER_TEST "enable test build" OFF)

if (MATCHMAKER_TEST)
    enable_testing()
    include(GoogleTest)
    add_executable(matchmaker-test "")
endif()

include_directories(.)

set(
    TARGET_SOURCES
    base_order_book.cpp
    instrument_matchmaker.cpp
    instrument_symbol.cpp
    matchmaker_engine.cpp
    simple_order_book.cpp
    simple_price_bucket.cpp
    trade_event.cpp
    trade_order.cpp
)
set(
    TEST_SOURCES 
    tests/test_base_order_book.cpp
    tests/test_simple_order_book.cpp
    tests/test_simple_price_bucket.cpp
    tests/test_trade_order.cpp
)

add_library(matchmaker ${TARGET_SOURCES})

## Testing

# Test executable for project (overall testing)
if (TEST)
    target_sources(
        exchange-test
        PUBLIC
        ${TARGET_SOURCES}
        ${TEST_SOURCES}
    )
endif()
# Test executable for current library only (isolated testing)
if (MATCHMAKER_TEST)
    target_sources(
        matchmaker-test
        PUBLIC
        ${TARGET_SOURCES}
        ${TEST_SOURCES}
    )
    gtest_discover_tests(matchmaker-test)
    target_link_libraries(
        matchmaker-test
        gtest_main
        gtest
        pthread
    )
endif()